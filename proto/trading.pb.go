// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trading.proto

package tradingdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ORDERTYPE int32

const (
	ORDERTYPE_INVALIDTYPE ORDERTYPE = 0
	ORDERTYPE_LIMIT       ORDERTYPE = 1
)

var ORDERTYPE_name = map[int32]string{
	0: "INVALIDTYPE",
	1: "LIMIT",
}
var ORDERTYPE_value = map[string]int32{
	"INVALIDTYPE": 0,
	"LIMIT":       1,
}

func (x ORDERTYPE) String() string {
	return proto.EnumName(ORDERTYPE_name, int32(x))
}
func (ORDERTYPE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{0}
}

type ORDERSIDE int32

const (
	ORDERSIDE_INVALIDSIDE ORDERSIDE = 0
	ORDERSIDE_BUY         ORDERSIDE = 1
	ORDERSIDE_SELL        ORDERSIDE = 2
)

var ORDERSIDE_name = map[int32]string{
	0: "INVALIDSIDE",
	1: "BUY",
	2: "SELL",
}
var ORDERSIDE_value = map[string]int32{
	"INVALIDSIDE": 0,
	"BUY":         1,
	"SELL":        2,
}

func (x ORDERSIDE) String() string {
	return proto.EnumName(ORDERSIDE_name, int32(x))
}
func (ORDERSIDE) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{1}
}

type Candle struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Open                 int64    `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	Close                int64    `protobuf:"varint,4,opt,name=close,proto3" json:"close,omitempty"`
	High                 int64    `protobuf:"varint,5,opt,name=high,proto3" json:"high,omitempty"`
	Low                  int64    `protobuf:"varint,6,opt,name=low,proto3" json:"low,omitempty"`
	CurTime              int64    `protobuf:"varint,7,opt,name=curTime,proto3" json:"curTime,omitempty"`
	Volume               int64    `protobuf:"varint,8,opt,name=volume,proto3" json:"volume,omitempty"`
	OpenInterest         int64    `protobuf:"varint,9,opt,name=openInterest,proto3" json:"openInterest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{0}
}
func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (dst *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(dst, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Candle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Candle) GetOpen() int64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() int64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetHigh() int64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() int64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetCurTime() int64 {
	if m != nil {
		return m.CurTime
	}
	return 0
}

func (m *Candle) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetOpenInterest() int64 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

type CandleChunk struct {
	Code                 string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime            int64     `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64     `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	KeyID                string    `protobuf:"bytes,5,opt,name=keyID,proto3" json:"keyID,omitempty"`
	Candles              []*Candle `protobuf:"bytes,6,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CandleChunk) Reset()         { *m = CandleChunk{} }
func (m *CandleChunk) String() string { return proto.CompactTextString(m) }
func (*CandleChunk) ProtoMessage()    {}
func (*CandleChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{1}
}
func (m *CandleChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandleChunk.Unmarshal(m, b)
}
func (m *CandleChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandleChunk.Marshal(b, m, deterministic)
}
func (dst *CandleChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandleChunk.Merge(dst, src)
}
func (m *CandleChunk) XXX_Size() int {
	return xxx_messageInfo_CandleChunk.Size(m)
}
func (m *CandleChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_CandleChunk.DiscardUnknown(m)
}

var xxx_messageInfo_CandleChunk proto.InternalMessageInfo

func (m *CandleChunk) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CandleChunk) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CandleChunk) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CandleChunk) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CandleChunk) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *CandleChunk) GetCandles() []*Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type CandleChunkList struct {
	KeyIDs               []string `protobuf:"bytes,1,rep,name=keyIDs,proto3" json:"keyIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandleChunkList) Reset()         { *m = CandleChunkList{} }
func (m *CandleChunkList) String() string { return proto.CompactTextString(m) }
func (*CandleChunkList) ProtoMessage()    {}
func (*CandleChunkList) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{2}
}
func (m *CandleChunkList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandleChunkList.Unmarshal(m, b)
}
func (m *CandleChunkList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandleChunkList.Marshal(b, m, deterministic)
}
func (dst *CandleChunkList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandleChunkList.Merge(dst, src)
}
func (m *CandleChunkList) XXX_Size() int {
	return xxx_messageInfo_CandleChunkList.Size(m)
}
func (m *CandleChunkList) XXX_DiscardUnknown() {
	xxx_messageInfo_CandleChunkList.DiscardUnknown(m)
}

var xxx_messageInfo_CandleChunkList proto.InternalMessageInfo

func (m *CandleChunkList) GetKeyIDs() []string {
	if m != nil {
		return m.KeyIDs
	}
	return nil
}

type Order struct {
	OrderID              string    `protobuf:"bytes,1,opt,name=orderID,proto3" json:"orderID,omitempty"`
	OrderType            ORDERTYPE `protobuf:"varint,2,opt,name=orderType,proto3,enum=tradingdb.ORDERTYPE" json:"orderType,omitempty"`
	OrderSide            ORDERSIDE `protobuf:"varint,3,opt,name=orderSide,proto3,enum=tradingdb.ORDERSIDE" json:"orderSide,omitempty"`
	Price                int64     `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume               int64     `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	StartTime            int64     `protobuf:"varint,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	AvgPrice             int64     `protobuf:"varint,7,opt,name=avgPrice,proto3" json:"avgPrice,omitempty"`
	DoneVolume           int64     `protobuf:"varint,8,opt,name=doneVolume,proto3" json:"doneVolume,omitempty"`
	DoneTime             int64     `protobuf:"varint,9,opt,name=doneTime,proto3" json:"doneTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Order) Reset()         { *m = Order{} }
func (m *Order) String() string { return proto.CompactTextString(m) }
func (*Order) ProtoMessage()    {}
func (*Order) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{3}
}
func (m *Order) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Order.Unmarshal(m, b)
}
func (m *Order) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Order.Marshal(b, m, deterministic)
}
func (dst *Order) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Order.Merge(dst, src)
}
func (m *Order) XXX_Size() int {
	return xxx_messageInfo_Order.Size(m)
}
func (m *Order) XXX_DiscardUnknown() {
	xxx_messageInfo_Order.DiscardUnknown(m)
}

var xxx_messageInfo_Order proto.InternalMessageInfo

func (m *Order) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *Order) GetOrderType() ORDERTYPE {
	if m != nil {
		return m.OrderType
	}
	return ORDERTYPE_INVALIDTYPE
}

func (m *Order) GetOrderSide() ORDERSIDE {
	if m != nil {
		return m.OrderSide
	}
	return ORDERSIDE_INVALIDSIDE
}

func (m *Order) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Order) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Order) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *Order) GetAvgPrice() int64 {
	if m != nil {
		return m.AvgPrice
	}
	return 0
}

func (m *Order) GetDoneVolume() int64 {
	if m != nil {
		return m.DoneVolume
	}
	return 0
}

func (m *Order) GetDoneTime() int64 {
	if m != nil {
		return m.DoneTime
	}
	return 0
}

type Trade struct {
	TradeID              string   `protobuf:"bytes,1,opt,name=tradeID,proto3" json:"tradeID,omitempty"`
	OrderID              string   `protobuf:"bytes,2,opt,name=orderID,proto3" json:"orderID,omitempty"`
	CurTime              int64    `protobuf:"varint,3,opt,name=curTime,proto3" json:"curTime,omitempty"`
	Price                int64    `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Volume               int64    `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Trade) Reset()         { *m = Trade{} }
func (m *Trade) String() string { return proto.CompactTextString(m) }
func (*Trade) ProtoMessage()    {}
func (*Trade) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{4}
}
func (m *Trade) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trade.Unmarshal(m, b)
}
func (m *Trade) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trade.Marshal(b, m, deterministic)
}
func (dst *Trade) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trade.Merge(dst, src)
}
func (m *Trade) XXX_Size() int {
	return xxx_messageInfo_Trade.Size(m)
}
func (m *Trade) XXX_DiscardUnknown() {
	xxx_messageInfo_Trade.DiscardUnknown(m)
}

var xxx_messageInfo_Trade proto.InternalMessageInfo

func (m *Trade) GetTradeID() string {
	if m != nil {
		return m.TradeID
	}
	return ""
}

func (m *Trade) GetOrderID() string {
	if m != nil {
		return m.OrderID
	}
	return ""
}

func (m *Trade) GetCurTime() int64 {
	if m != nil {
		return m.CurTime
	}
	return 0
}

func (m *Trade) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Trade) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

type TradingData struct {
	KeyID                string   `protobuf:"bytes,1,opt,name=keyID,proto3" json:"keyID,omitempty"`
	Orders               []*Order `protobuf:"bytes,2,rep,name=orders,proto3" json:"orders,omitempty"`
	Trades               []*Trade `protobuf:"bytes,3,rep,name=trades,proto3" json:"trades,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TradingData) Reset()         { *m = TradingData{} }
func (m *TradingData) String() string { return proto.CompactTextString(m) }
func (*TradingData) ProtoMessage()    {}
func (*TradingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_6a23920f5b5f954a, []int{5}
}
func (m *TradingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TradingData.Unmarshal(m, b)
}
func (m *TradingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TradingData.Marshal(b, m, deterministic)
}
func (dst *TradingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TradingData.Merge(dst, src)
}
func (m *TradingData) XXX_Size() int {
	return xxx_messageInfo_TradingData.Size(m)
}
func (m *TradingData) XXX_DiscardUnknown() {
	xxx_messageInfo_TradingData.DiscardUnknown(m)
}

var xxx_messageInfo_TradingData proto.InternalMessageInfo

func (m *TradingData) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *TradingData) GetOrders() []*Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func (m *TradingData) GetTrades() []*Trade {
	if m != nil {
		return m.Trades
	}
	return nil
}

func init() {
	proto.RegisterType((*Candle)(nil), "tradingdb.Candle")
	proto.RegisterType((*CandleChunk)(nil), "tradingdb.CandleChunk")
	proto.RegisterType((*CandleChunkList)(nil), "tradingdb.CandleChunkList")
	proto.RegisterType((*Order)(nil), "tradingdb.Order")
	proto.RegisterType((*Trade)(nil), "tradingdb.Trade")
	proto.RegisterType((*TradingData)(nil), "tradingdb.TradingData")
	proto.RegisterEnum("tradingdb.ORDERTYPE", ORDERTYPE_name, ORDERTYPE_value)
	proto.RegisterEnum("tradingdb.ORDERSIDE", ORDERSIDE_name, ORDERSIDE_value)
}

func init() { proto.RegisterFile("trading.proto", fileDescriptor_trading_6a23920f5b5f954a) }

var fileDescriptor_trading_6a23920f5b5f954a = []byte{
	// 525 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x54, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xed, 0xc6, 0xb1, 0x13, 0x4f, 0x80, 0x9a, 0x55, 0x85, 0x56, 0x08, 0xa1, 0xc8, 0x17, 0x42,
	0x91, 0x82, 0x14, 0xbe, 0x00, 0xea, 0x1c, 0x2c, 0x05, 0x5a, 0x6d, 0x4c, 0xa5, 0x1e, 0xdd, 0x78,
	0x95, 0x58, 0x4d, 0xec, 0xc8, 0x76, 0x5a, 0xf5, 0xcc, 0xf7, 0x20, 0xf1, 0x35, 0x7c, 0x0f, 0x9a,
	0x59, 0xdb, 0x59, 0x03, 0x07, 0xb8, 0xcd, 0x9b, 0x79, 0xe3, 0x9d, 0xf7, 0x66, 0x64, 0x78, 0x5a,
	0x15, 0x71, 0x92, 0x66, 0xeb, 0xe9, 0xbe, 0xc8, 0xab, 0x9c, 0xbb, 0x35, 0x4c, 0x6e, 0xfd, 0x9f,
	0x0c, 0x9c, 0x8b, 0x38, 0x4b, 0xb6, 0x8a, 0x73, 0xe8, 0xaf, 0xf2, 0x44, 0x09, 0x36, 0x66, 0x13,
	0x57, 0x52, 0x8c, 0xb9, 0x2c, 0xde, 0x29, 0xd1, 0xd3, 0x39, 0x8c, 0x31, 0x97, 0xef, 0x55, 0x26,
	0xac, 0x31, 0x9b, 0x58, 0x92, 0x62, 0x7e, 0x06, 0xf6, 0x6a, 0x9b, 0x97, 0x4a, 0xf4, 0x29, 0xa9,
	0x01, 0x32, 0x37, 0xe9, 0x7a, 0x23, 0x6c, 0xcd, 0xc4, 0x98, 0x7b, 0x60, 0x6d, 0xf3, 0x07, 0xe1,
	0x50, 0x0a, 0x43, 0x2e, 0x60, 0xb0, 0x3a, 0x14, 0x51, 0xba, 0x53, 0x62, 0x40, 0xd9, 0x06, 0xf2,
	0x17, 0xe0, 0xdc, 0xe7, 0xdb, 0xc3, 0x4e, 0x89, 0x21, 0x15, 0x6a, 0xc4, 0x7d, 0x78, 0x82, 0xaf,
	0x86, 0x59, 0xa5, 0x0a, 0x55, 0x56, 0xc2, 0xa5, 0x6a, 0x27, 0xe7, 0xff, 0x60, 0x30, 0xd2, 0xc2,
	0x2e, 0x36, 0x87, 0xec, 0xee, 0x9f, 0xd5, 0xbd, 0x02, 0xb7, 0xac, 0xe2, 0xa2, 0xa2, 0x79, 0xb4,
	0xc4, 0x63, 0x02, 0x67, 0x55, 0x59, 0x42, 0x35, 0xad, 0xb4, 0x81, 0xe8, 0xc0, 0x9d, 0x7a, 0x0c,
	0x03, 0x12, 0xeb, 0x4a, 0x0d, 0xf8, 0x3b, 0x18, 0xac, 0x68, 0x88, 0x52, 0x38, 0x63, 0x6b, 0x32,
	0x9a, 0x3d, 0x9f, 0xb6, 0xde, 0x4f, 0xf5, 0x78, 0xb2, 0x61, 0xf8, 0x6f, 0xe1, 0xd4, 0x98, 0x78,
	0x91, 0x96, 0x15, 0x3a, 0x40, 0x1f, 0x2a, 0x05, 0x1b, 0x5b, 0x13, 0x57, 0xd6, 0xc8, 0xff, 0xde,
	0x03, 0xfb, 0xb2, 0x48, 0x54, 0x81, 0x13, 0xe5, 0x18, 0x84, 0x41, 0x2d, 0xad, 0x81, 0x7c, 0x06,
	0x2e, 0x85, 0xd1, 0xe3, 0x5e, 0x4b, 0x7c, 0x36, 0x3b, 0x33, 0x5e, 0xbf, 0x94, 0xc1, 0x5c, 0x46,
	0x37, 0x57, 0x73, 0x79, 0xa4, 0xb5, 0x3d, 0xcb, 0x34, 0xd1, 0xea, 0xff, 0xd2, 0xb3, 0x0c, 0x83,
	0xa6, 0x07, 0x69, 0xa8, 0x7c, 0x5f, 0xa4, 0xab, 0x76, 0xf7, 0x04, 0x8c, 0xdd, 0xd9, 0x9d, 0xdd,
	0x75, 0xfc, 0x75, 0x7e, 0xf7, 0xf7, 0x25, 0x0c, 0xe3, 0xfb, 0xf5, 0x15, 0x7d, 0x4e, 0x1f, 0x43,
	0x8b, 0xf9, 0x6b, 0x80, 0x24, 0xcf, 0xd4, 0xb5, 0x79, 0x11, 0x46, 0x06, 0x7b, 0x11, 0xd1, 0x87,
	0xf5, 0x45, 0xb4, 0xd8, 0xff, 0xc6, 0xc0, 0x8e, 0x8a, 0x38, 0xa1, 0x0d, 0xa2, 0x1e, 0x75, 0xf4,
	0xab, 0x86, 0xa6, 0x93, 0xbd, 0xae, 0x93, 0xc6, 0x85, 0x5a, 0xdd, 0x0b, 0xfd, 0x2f, 0xed, 0xfe,
	0x03, 0x8c, 0x22, 0xed, 0x65, 0x10, 0x57, 0xf1, 0xf1, 0x64, 0x98, 0x79, 0x32, 0x13, 0x70, 0xe8,
	0xdd, 0x52, 0xf4, 0xe8, 0x62, 0x3c, 0xd3, 0x7f, 0x2c, 0xc8, 0xba, 0x8e, 0x4c, 0x9a, 0xbd, 0x14,
	0xd6, 0x1f, 0x4c, 0x12, 0x2b, 0xeb, 0xfa, 0xf9, 0x1b, 0x70, 0xdb, 0x75, 0xf3, 0x53, 0x18, 0x85,
	0x5f, 0xae, 0x3f, 0x2e, 0xc2, 0x00, 0xa1, 0x77, 0xc2, 0x5d, 0xb0, 0x17, 0xe1, 0xe7, 0x30, 0xf2,
	0xd8, 0xf9, 0xfb, 0x9a, 0x88, 0x3b, 0x36, 0x88, 0x08, 0xbd, 0x13, 0x3e, 0x00, 0xeb, 0xd3, 0xd7,
	0x1b, 0x8f, 0xf1, 0x21, 0xf4, 0x97, 0xf3, 0xc5, 0xc2, 0xeb, 0xdd, 0x3a, 0xf4, 0x47, 0xf9, 0xf0,
	0x2b, 0x00, 0x00, 0xff, 0xff, 0xad, 0xc9, 0xb2, 0x47, 0x62, 0x04, 0x00, 0x00,
}
