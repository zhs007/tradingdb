// Code generated by protoc-gen-go. DO NOT EDIT.
// source: trading.proto

package tradingdb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Candle struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Open                 int64    `protobuf:"varint,3,opt,name=open,proto3" json:"open,omitempty"`
	Close                int64    `protobuf:"varint,4,opt,name=close,proto3" json:"close,omitempty"`
	High                 int64    `protobuf:"varint,5,opt,name=high,proto3" json:"high,omitempty"`
	Low                  int64    `protobuf:"varint,6,opt,name=low,proto3" json:"low,omitempty"`
	CurTime              int64    `protobuf:"varint,7,opt,name=curTime,proto3" json:"curTime,omitempty"`
	Volume               int64    `protobuf:"varint,8,opt,name=volume,proto3" json:"volume,omitempty"`
	OpenInterest         int64    `protobuf:"varint,9,opt,name=openInterest,proto3" json:"openInterest,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Candle) Reset()         { *m = Candle{} }
func (m *Candle) String() string { return proto.CompactTextString(m) }
func (*Candle) ProtoMessage()    {}
func (*Candle) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_d263fdd6d482814c, []int{0}
}
func (m *Candle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Candle.Unmarshal(m, b)
}
func (m *Candle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Candle.Marshal(b, m, deterministic)
}
func (dst *Candle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Candle.Merge(dst, src)
}
func (m *Candle) XXX_Size() int {
	return xxx_messageInfo_Candle.Size(m)
}
func (m *Candle) XXX_DiscardUnknown() {
	xxx_messageInfo_Candle.DiscardUnknown(m)
}

var xxx_messageInfo_Candle proto.InternalMessageInfo

func (m *Candle) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Candle) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Candle) GetOpen() int64 {
	if m != nil {
		return m.Open
	}
	return 0
}

func (m *Candle) GetClose() int64 {
	if m != nil {
		return m.Close
	}
	return 0
}

func (m *Candle) GetHigh() int64 {
	if m != nil {
		return m.High
	}
	return 0
}

func (m *Candle) GetLow() int64 {
	if m != nil {
		return m.Low
	}
	return 0
}

func (m *Candle) GetCurTime() int64 {
	if m != nil {
		return m.CurTime
	}
	return 0
}

func (m *Candle) GetVolume() int64 {
	if m != nil {
		return m.Volume
	}
	return 0
}

func (m *Candle) GetOpenInterest() int64 {
	if m != nil {
		return m.OpenInterest
	}
	return 0
}

type CandleChunk struct {
	Code                 string    `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	StartTime            int64     `protobuf:"varint,3,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime              int64     `protobuf:"varint,4,opt,name=endTime,proto3" json:"endTime,omitempty"`
	KeyID                string    `protobuf:"bytes,5,opt,name=keyID,proto3" json:"keyID,omitempty"`
	Candles              []*Candle `protobuf:"bytes,6,rep,name=candles,proto3" json:"candles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CandleChunk) Reset()         { *m = CandleChunk{} }
func (m *CandleChunk) String() string { return proto.CompactTextString(m) }
func (*CandleChunk) ProtoMessage()    {}
func (*CandleChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_d263fdd6d482814c, []int{1}
}
func (m *CandleChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandleChunk.Unmarshal(m, b)
}
func (m *CandleChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandleChunk.Marshal(b, m, deterministic)
}
func (dst *CandleChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandleChunk.Merge(dst, src)
}
func (m *CandleChunk) XXX_Size() int {
	return xxx_messageInfo_CandleChunk.Size(m)
}
func (m *CandleChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_CandleChunk.DiscardUnknown(m)
}

var xxx_messageInfo_CandleChunk proto.InternalMessageInfo

func (m *CandleChunk) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CandleChunk) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CandleChunk) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *CandleChunk) GetEndTime() int64 {
	if m != nil {
		return m.EndTime
	}
	return 0
}

func (m *CandleChunk) GetKeyID() string {
	if m != nil {
		return m.KeyID
	}
	return ""
}

func (m *CandleChunk) GetCandles() []*Candle {
	if m != nil {
		return m.Candles
	}
	return nil
}

type CandleChunkList struct {
	KeyIDs               []string `protobuf:"bytes,1,rep,name=keyIDs,proto3" json:"keyIDs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CandleChunkList) Reset()         { *m = CandleChunkList{} }
func (m *CandleChunkList) String() string { return proto.CompactTextString(m) }
func (*CandleChunkList) ProtoMessage()    {}
func (*CandleChunkList) Descriptor() ([]byte, []int) {
	return fileDescriptor_trading_d263fdd6d482814c, []int{2}
}
func (m *CandleChunkList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CandleChunkList.Unmarshal(m, b)
}
func (m *CandleChunkList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CandleChunkList.Marshal(b, m, deterministic)
}
func (dst *CandleChunkList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CandleChunkList.Merge(dst, src)
}
func (m *CandleChunkList) XXX_Size() int {
	return xxx_messageInfo_CandleChunkList.Size(m)
}
func (m *CandleChunkList) XXX_DiscardUnknown() {
	xxx_messageInfo_CandleChunkList.DiscardUnknown(m)
}

var xxx_messageInfo_CandleChunkList proto.InternalMessageInfo

func (m *CandleChunkList) GetKeyIDs() []string {
	if m != nil {
		return m.KeyIDs
	}
	return nil
}

func init() {
	proto.RegisterType((*Candle)(nil), "tradingdb.Candle")
	proto.RegisterType((*CandleChunk)(nil), "tradingdb.CandleChunk")
	proto.RegisterType((*CandleChunkList)(nil), "tradingdb.CandleChunkList")
}

func init() { proto.RegisterFile("trading.proto", fileDescriptor_trading_d263fdd6d482814c) }

var fileDescriptor_trading_d263fdd6d482814c = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0x4d, 0x4e, 0x84, 0x40,
	0x10, 0x85, 0xd3, 0x32, 0xc3, 0xd8, 0x35, 0x1a, 0xb5, 0x63, 0x4c, 0x2d, 0x5c, 0x10, 0x56, 0x18,
	0x13, 0x16, 0x7a, 0x84, 0x71, 0x33, 0x89, 0x2b, 0xe2, 0x05, 0x18, 0xa8, 0x0c, 0x64, 0xa0, 0x7b,
	0x42, 0x37, 0x1a, 0x6f, 0xe5, 0x69, 0x3c, 0x8f, 0xe9, 0x6a, 0xf0, 0x67, 0xe7, 0xee, 0xbd, 0xaf,
	0x2a, 0xf0, 0x5e, 0x35, 0x9c, 0xbb, 0xa1, 0xac, 0x5b, 0xbd, 0xcf, 0x8f, 0x83, 0x71, 0x46, 0xc9,
	0xc9, 0xd6, 0xbb, 0xf4, 0x53, 0x40, 0xbc, 0x29, 0x75, 0xdd, 0x91, 0x52, 0xb0, 0xa8, 0x4c, 0x4d,
	0x28, 0x12, 0x91, 0xc9, 0x82, 0xb5, 0x67, 0xba, 0xec, 0x09, 0x4f, 0x02, 0xf3, 0xda, 0x33, 0x73,
	0x24, 0x8d, 0x51, 0x22, 0xb2, 0xa8, 0x60, 0xad, 0xae, 0x61, 0x59, 0x75, 0xc6, 0x12, 0x2e, 0x18,
	0x06, 0xe3, 0x37, 0x9b, 0x76, 0xdf, 0xe0, 0x32, 0x6c, 0x7a, 0xad, 0x2e, 0x21, 0xea, 0xcc, 0x1b,
	0xc6, 0x8c, 0xbc, 0x54, 0x08, 0xab, 0x6a, 0x1c, 0x5e, 0xda, 0x9e, 0x70, 0xc5, 0x74, 0xb6, 0xea,
	0x06, 0xe2, 0x57, 0xd3, 0x8d, 0x3d, 0xe1, 0x29, 0x0f, 0x26, 0xa7, 0x52, 0x38, 0xf3, 0x7f, 0xdd,
	0x6a, 0x47, 0x03, 0x59, 0x87, 0x92, 0xa7, 0x7f, 0x58, 0xfa, 0x21, 0x60, 0x1d, 0x8a, 0x6d, 0x9a,
	0x51, 0x1f, 0xfe, 0xdd, 0xee, 0x16, 0xa4, 0x75, 0xe5, 0xe0, 0x38, 0x4f, 0xa8, 0xf8, 0x03, 0x7c,
	0x56, 0xd2, 0x35, 0xcf, 0x42, 0xd3, 0xd9, 0xfa, 0x0b, 0x1c, 0xe8, 0x7d, 0xfb, 0xc4, 0x65, 0x65,
	0x11, 0x8c, 0xba, 0x87, 0x55, 0xc5, 0x21, 0x2c, 0xc6, 0x49, 0x94, 0xad, 0x1f, 0xae, 0xf2, 0xef,
	0xdb, 0xe7, 0x21, 0x5e, 0x31, 0x6f, 0xa4, 0x77, 0x70, 0xf1, 0x2b, 0xf1, 0x73, 0x6b, 0x9d, 0xbf,
	0x00, 0x7f, 0xc8, 0xa2, 0x48, 0xa2, 0x4c, 0x16, 0x93, 0xdb, 0xc5, 0xfc, 0x90, 0x8f, 0x5f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xd0, 0x8b, 0x5b, 0x4e, 0xd9, 0x01, 0x00, 0x00,
}
